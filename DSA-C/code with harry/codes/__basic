https://www.tutorialspoint.com/data_structures_algorithms/array_data_structure.htm




Time complexity and Big O
a function f(n) is said to be O g(n) iff there exists constant c and n. such that:
o <=f(n)<=c1 g(n) for all n>=n. 
o <=c2 g(n) <=f(n) for all n>=n. 
c2 g(n)<=f(n) <= c1 g(n) for all n>=n

best worst and expected case

tricks
1)drop the non dominant terms
2)drop the constant terms
3)break the code into fragments

ADT & Arrays
