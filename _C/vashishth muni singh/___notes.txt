

foramt specifier

%c--->char      'a'           ------>1
%d--->int        1            ------>4
%f--->float     23.165        ------>4
%lf--->double   41.46464655   ------>8
%s--->string   "berlin"


data type
---> int,float,char,double,void

OPERATORS(in order)  {left to right}
1) UNARY
+ - ++ -- sizeof()

2)ARITHMATIC
* / % + -
3)BITWISE
bitwise AND                 &                         1byte=8bits
bitwise OR                  |                          true----> 1 (non zero)
bitwise XOR                 ^                           false---> 0
bitwise NOT                 ~
bitwise LEST SHIFT          <<
bitwise RIGHT SHIFT         >>

4)RELATIONAL
> >= < <= == !=

5)LOGICAL
logical AND    &&
logical OR     ||
logical NOT    !

6)CONDITIONAL
condition?exp1:exp2;

7)ASSIGMENT
=

#binary to num

                2^6     2^5     2^4     2^3     2^2     2^1     2^0
                64      32      16      8       4       2       1

y=11&12    11   00000000    00000000    00000000    00001011
           12   00000000    00000000    00000000    00001100
           ----------------------------------------------------
           8    00000000    00000000    00000000    00001000
           if both 1 then 1

y=11|12    11   00000000    00000000    00000000    00001011
           12   00000000    00000000    00000000    00001100
           ----------------------------------------------------
           15   00000000    00000000    00000000    00001111    
           any of them is 1 then 1   

y=11|12    11   00000000    00000000    00000000    00001011
           12   00000000    00000000    00000000    00001100
           ----------------------------------------------------
           7    00000000    00000000    00000000    00000111 
           if both 1 then 0, if one of 1 then 1

y=12<<1    12   00000000    00000000    00000000    00001100        -
           ----------------------------------------------------       -
           24   00000000    00000000    00000000    00011000            -
           shift one to left                                             -  
                                                                         -   12*(2^n)
y=12<<2    12   00000000    00000000    00000000    00001100             -
           ----------------------------------------------------        -
           48   00000000    00000000    00000000    00110000         -
           shift two to left                                      -

y=12>>1    12   00000000    00000000    00000000    00001100         -
           ----------------------------------------------------        -
           6    00000000    00000000    00000000    00000110            -
           shift one to right                                            -
                                                                         -     12/(2^n)
y=12<<2    12   00000000    00000000    00000000    00001100             -
           ----------------------------------------------------         -
           3    00000000    00000000    00000000    00000011          -
           shift two to right                                       -





# DECIION CONTROL
if 
if-else
for loop
while loop
do-while loop-----> atleast complete one cycle
infinite loop
nested loop
break
continue
goto

*******************************************
int         arr         [5];
data type   arrayname   size of array



array[5]={0,1,2,3,4};  ------> consecutive
or  array[0]=4 
    array[1]=6    .....so on.

    string ------> special array
    \0 ------> null character   ASCII value =0
    char a[5]={'a','b','c','\0'};
    print("%c",a[1]);

    char a[20]="abcdef";
    print("%s",a);

  #string
  strlen() ---->  strlen(a1)); //length of string a1
  strcpy() ---->  strcpy(a1,a2);  //(in copy,to copy) a2 is copied in a1
  strcat() ---->  (strcat(a1,a2)); //combines a1 & a2
  strcmp() ---->  strcmp(a1, a2); //-1 (ascii l < ascii u)    // comparing a1 to a2
  strrev() ---->  (strrev(a1));  //reverse the order
  strlwr() ---->  (strlwr(a1)); // all charecter in lower case
  strupr() ---->  (strupr(a2)); //all character in upper case
  strstr() ---->  (strstr(a1,"ck")); //output from specific given char